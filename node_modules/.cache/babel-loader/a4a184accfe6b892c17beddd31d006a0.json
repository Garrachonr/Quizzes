{"ast":null,"code":"var _jsxFileName = \"/Users/garra/Documents/Universidad/Cuarto/IWEB/React1/src/components/Quiz.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Game from './Game';\nimport Timer from './timer';\nimport { quizzes } from \"./mock-data\";\nimport { LangContext } from \"./App\";\nimport { useContext } from \"react\";\nimport './mejoraCSS/Quiz.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Quiz(props) {\n  _s();\n\n  const timer = 60;\n  const lang = useContext(LangContext);\n  const [score, setScore] = useState(0);\n  const [currentQuiz, setCurrentQuiz] = useState(0);\n  const [quizzess, setQuizzess] = useState(quizzes);\n  const [finished, setFinished] = useState(0);\n  const [answer, setAnswer] = useState(\"\");\n  const [ended, setEnded] = useState(0);\n  const [correcto, setCorrecto] = useState(0);\n  const [count, setCount] = useState(timer);\n\n  function responder(text) {\n    setAnswer(text);\n  }\n\n  function end(num) {\n    if (num == 0 || num < 0) {\n      setEnded(1);\n    }\n  } // useEffect(() => {\n  //fetch(\"https://core.dit.upm.es/api/quizzes/random10wa?token=230b85b7a294b436746f\")\n  //  .then(res => res.json())\n  // .then(json => {console.log(json);setQuizzess(json)})\n  // }, []);\n\n\n  function correct() {\n    setScore(score + 1);\n    setFinished(1);\n    setAnswer(\"\");\n  }\n\n  function enter() {\n    if (finished == 0) {\n      if (answer.trim().toLocaleLowerCase() == quizzess[currentQuiz].answer.trim().toLocaleLowerCase()) {\n        correct();\n        Siguiente();\n      }\n    }\n  }\n\n  function comprobar() {\n    if (finished == 0) {\n      if (answer.trim().toLocaleLowerCase() == quizzess[currentQuiz].answer.trim().toLocaleLowerCase()) {\n        correct();\n      }\n    }\n  }\n\n  function Siguiente() {\n    if (currentQuiz != quizzess.length - 1) {\n      setCurrentQuiz(currentQuiz + 1);\n      setFinished(0);\n      setAnswer(\"\");\n    }\n  }\n\n  function Previous() {\n    setCurrentQuiz(currentQuiz - 1);\n    setFinished(0);\n    setAnswer(\"\");\n  }\n\n  function Reset() {\n    setScore(0);\n    setAnswer(\"\");\n    setCurrentQuiz(0);\n    setFinished(0);\n    setEnded(0);\n    setCount(timer);\n  }\n\n  if (finished == 1 & currentQuiz == quizzess.length - 1 || ended == 1) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [score, /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"FIN\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Pagina de juegos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this), answer, score, /*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"buttons\",\n      roles: \"tablist\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: finished == 1 & currentQuiz == quizzess.length - 1,\n        onClick: () => setCurrentQuiz(0),\n        children: \"1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: finished == 1 & currentQuiz == quizzess.length - 1,\n        onClick: () => setCurrentQuiz(1),\n        children: \"2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: finished == 1 & currentQuiz == quizzess.length - 1,\n        onClick: () => setCurrentQuiz(2),\n        children: \"3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: finished == 1 & currentQuiz == quizzess.length - 1,\n        onClick: () => setCurrentQuiz(3),\n        children: \"4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: finished == 1 & currentQuiz == quizzess.length - 1,\n        onClick: () => setCurrentQuiz(4),\n        children: \"5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: finished == 1 & currentQuiz == quizzess.length - 1,\n        onClick: () => setCurrentQuiz(5),\n        children: \"6\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: finished == 1 & currentQuiz == quizzess.length - 1,\n        onClick: () => setCurrentQuiz(6),\n        children: \"7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: finished == 1 & currentQuiz == quizzess.length - 1,\n        onClick: () => setCurrentQuiz(7),\n        children: \"8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: finished == 1 & currentQuiz == quizzess.length - 1,\n        onClick: () => setCurrentQuiz(8),\n        children: \"9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: finished == 1 & currentQuiz == quizzess.length - 1,\n        onClick: () => setCurrentQuiz(9),\n        children: \"10\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Timer, {\n      end: end,\n      count: count,\n      setCount: setCount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Game, {\n      quiz: quizzess[currentQuiz],\n      enter: enter,\n      responder: responder,\n      finished: finished,\n      answer: answer,\n      comprobar: comprobar,\n      Next: Siguiente\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => comprobar(),\n      children: lang.dictionary[\"Submit\"]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: currentQuiz == 0,\n      onClick: () => Previous(),\n      children: lang.dictionary[\"Previous\"]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: currentQuiz == quizzess.length - 1,\n      onClick: () => Siguiente(),\n      children: lang.dictionary[\"Next\"]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => Reset(),\n      children: \"Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Quiz, \"X0KfmZuhDyg9jRl6H9UXTNo4/S0=\");\n\n_c = Quiz;\n\nvar _c;\n\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"sources":["/Users/garra/Documents/Universidad/Cuarto/IWEB/React1/src/components/Quiz.js"],"names":["React","useState","useEffect","Game","Timer","quizzes","LangContext","useContext","Quiz","props","timer","lang","score","setScore","currentQuiz","setCurrentQuiz","quizzess","setQuizzess","finished","setFinished","answer","setAnswer","ended","setEnded","correcto","setCorrecto","count","setCount","responder","text","end","num","correct","enter","trim","toLocaleLowerCase","Siguiente","comprobar","length","Previous","Reset","dictionary"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Game from './Game';\nimport Timer from './timer';\nimport { quizzes } from \"./mock-data\";\nimport { LangContext } from \"./App\";\nimport { useContext } from \"react\";\nimport './mejoraCSS/Quiz.css';\n\nexport default function Quiz(props) {\n\n    const timer = 60\n\n    const lang = useContext(LangContext);\n    const [score, setScore] = useState(0);\n    const [currentQuiz, setCurrentQuiz] = useState(0);\n    const [quizzess, setQuizzess] = useState(quizzes);\n    const [finished, setFinished] = useState(0);\n    const [answer, setAnswer] = useState(\"\");\n    const [ended, setEnded] = useState(0);\n    const [correcto, setCorrecto] = useState(0);\n    const [count, setCount] = useState(timer);\n\n    function responder(text) {\n        setAnswer(text);\n    }\n\n    function end(num) {\n        if (num == 0 || num < 0) {\n            setEnded(1);\n        }\n    }\n\n    // useEffect(() => {\n    //fetch(\"https://core.dit.upm.es/api/quizzes/random10wa?token=230b85b7a294b436746f\")\n    //  .then(res => res.json())\n    // .then(json => {console.log(json);setQuizzess(json)})\n    // }, []);\n\n    function correct() {\n        setScore(score + 1);\n        setFinished(1);\n        setAnswer(\"\");\n    }\n\n    function enter() {\n        if (finished == 0) {\n            if (answer.trim().toLocaleLowerCase() == quizzess[currentQuiz].answer.trim().toLocaleLowerCase()) {\n                correct();\n                Siguiente();\n            }\n        }\n    }\n    function comprobar() {\n        if (finished == 0) {\n            if (answer.trim().toLocaleLowerCase() == quizzess[currentQuiz].answer.trim().toLocaleLowerCase()) {\n                correct();\n            }\n        }\n    }\n\n    function Siguiente() {\n        if (currentQuiz != quizzess.length - 1) {\n            setCurrentQuiz(currentQuiz + 1);\n            setFinished(0);\n            setAnswer(\"\");\n        }\n    }\n\n    function Previous() {\n        setCurrentQuiz(currentQuiz - 1);\n        setFinished(0);\n        setAnswer(\"\");\n    }\n    function Reset() {\n        setScore(0);\n        setAnswer(\"\");\n        setCurrentQuiz(0);\n        setFinished(0);\n        setEnded(0);\n        setCount(timer)\n    }\n\n    if ((finished == 1 & currentQuiz == quizzess.length - 1) || (ended == 1)) {\n        return (\n            <div>\n                {score}\n                <h1>FIN</h1>\n            </div>\n        );\n    }\n    return (\n        <div>\n            <h1>Pagina de juegos</h1>\n            {answer}\n            {score}\n            <nav className='buttons' roles=\"tablist\">\n                <button disabled={finished == 1 & currentQuiz == quizzess.length - 1} onClick={() => setCurrentQuiz(0)}>1</button>\n                <button disabled={finished == 1 & currentQuiz == quizzess.length - 1} onClick={() => setCurrentQuiz(1)}>2</button>\n                <button disabled={finished == 1 & currentQuiz == quizzess.length - 1} onClick={() => setCurrentQuiz(2)}>3</button>\n                <button disabled={finished == 1 & currentQuiz == quizzess.length - 1} onClick={() => setCurrentQuiz(3)}>4</button>\n                <button disabled={finished == 1 & currentQuiz == quizzess.length - 1} onClick={() => setCurrentQuiz(4)}>5</button>\n                <button disabled={finished == 1 & currentQuiz == quizzess.length - 1} onClick={() => setCurrentQuiz(5)}>6</button>\n                <button disabled={finished == 1 & currentQuiz == quizzess.length - 1} onClick={() => setCurrentQuiz(6)}>7</button>\n                <button disabled={finished == 1 & currentQuiz == quizzess.length - 1} onClick={() => setCurrentQuiz(7)}>8</button>\n                <button disabled={finished == 1 & currentQuiz == quizzess.length - 1} onClick={() => setCurrentQuiz(8)}>9</button>\n                <button disabled={finished == 1 & currentQuiz == quizzess.length - 1} onClick={() => setCurrentQuiz(9)}>10</button>\n            </nav>\n            <Timer end={end} count={count} setCount={setCount} />\n            <Game quiz={quizzess[currentQuiz]} enter={enter} responder={responder} finished={finished} answer={answer} comprobar={comprobar} Next={Siguiente} />\n            <br />\n            <button onClick={() => comprobar()}>\n                {lang.dictionary[\"Submit\"]}\n            </button>\n            <button disabled={currentQuiz == 0} onClick={() => Previous()}>\n                {lang.dictionary[\"Previous\"]}\n            </button>\n            <button disabled={currentQuiz == quizzess.length - 1} onClick={() => Siguiente()}>\n                {lang.dictionary[\"Next\"]}\n            </button>\n            <button onClick={() => Reset()}>Reset</button>\n        </div>\n    );\n\n\n}"]},"metadata":{},"sourceType":"module"}